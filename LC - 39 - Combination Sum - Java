class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
      
        
        List<List<Integer>> output_arr = new ArrayList<>();
        
        findCombination (candidates, target,0, new ArrayList<>(), output_arr);
        return output_arr;
        
    }
    
    public void findCombination (int [] candidates , int target,int index ,List<Integer> current, List<List<Integer>> output_arr)  {
        
        if (target<0) {
            return;
        }
        
        if (target==0) {
            output_arr.add(current);
            return;
        }
        
        for (int i=index; i<candidates.length;i++){
            
            int new_target = target - candidates[i];
           
            List<Integer> p = new ArrayList<>(current);
            p.add(candidates[i]);
            
           findCombination (candidates, new_target,i,p,output_arr);
                
            }
        }
        
       
    }



